{"version":3,"file":"component---src-pages-coverletter-tsx-7bd1895116866954ab32.js","mappings":"wKAIMA,EAAgBC,KAChBC,EAAY,OAEZC,EAAY,QACZC,EACJ,4IAMIC,EAAY,SAACC,GACjB,OACE,uBACEC,MAAO,CACLC,MAAOL,EACPM,OAAQ,SACRC,QAAS,SAGVJ,EAAMK,WAWPC,EAAU,SAACN,GACf,OACE,uBACEC,MAAO,CACLM,QAAS,OACTL,MAAOL,EACPW,eAA+B,IAAhBR,EAAMS,MAAiB,MAAQ,SAC9CC,eAAgB,gBAChBC,aAAiBhB,MACjBiB,qBAC4BC,IAA1Bb,EAAMY,gBAAgCZ,EAAMY,gBAAkB,SAGjEZ,EAAMK,WAUPS,EAAQ,SAACd,GACb,OACE,sBACEC,MAAO,CACLc,UAAaf,EAAMgB,KAAOhB,EAAMgB,KAAOrB,IAA/B,KACRsB,MAAOrB,EACPE,WAAAA,IAGDE,EAAMK,WAuCPa,EAAO,SAAClB,GACZ,IAAMmB,EAA6B,CACjCJ,eAA4BF,IAAfb,EAAMgB,KAAqBhB,EAAMgB,KAAOrB,IAA7C,KACRyB,YAA6B,IAAjBpB,EAAMqB,OAAkB,OAAS,SAC7CC,WAA8B,IAAnBtB,EAAMuB,SAAoB,SAAW,SAChDzB,WAAAA,EACA0B,eAAoC,IAArBxB,EAAMyB,WAAsB,YAAc,OACzDC,eAAoC,IAArB1B,EAAMyB,WAAsB,QAAU,MACrDE,kBAA6Bd,IAAfb,EAAM4B,KAAqB,iBAAmB,OAC5DX,MAAOrB,EACPW,QAAS,UAEX,OACE,qCACkBM,IAAfb,EAAM4B,KACL,qBAAGC,KAAM7B,EAAM4B,MACb,qBAAG3B,MAAOkB,GAAanB,EAAMK,WAG/B,qBAAGJ,MAAOkB,GAAanB,EAAMK,YAoJ/ByB,EAAQ,IAAIC,KA6IlB,UA3IoB,kBAClB,gBAAChC,EAAD,KACE,gBAACO,EAAD,CAASG,OAAO,GACd,2BACE,gBAACK,EAAD,qBACA,gBAACI,EAAD,CAAMO,YAAY,EAAMT,KAAMtB,GAA9B,iGAKF,uBACEO,MAAO,CACLM,QAAS,OACTC,cAAe,SACfE,eAAgB,WAChBsB,WAAY,aAGd,2BACE,gBAACd,EAAD,+BAEF,2BACE,gBAACA,EAAD,wBAEF,2BACE,gBAACA,EAAD,sBAIN,uBAAKjB,MAAO,CAAEgC,OAAWtC,UACzB,gBAACW,EAAD,KACE,gBAACY,EAAD,CAAMO,YAAY,EAAMT,KAAMtB,GAC3BoC,EAAMI,mBAAmB,QAAS,CACjCC,QAAS,OACTC,KAAM,UACNC,MAAO,OACPC,IAAK,YAEP,2BACA,2BARF,6CAUE,2BAVF,uCAYE,2BAZF,4BAcE,2BAdF,qBAkBF,gBAAChC,EAAD,KACE,gBAACY,EAAD,0BAEE,2BAEA,2BAJF,2mBAaE,2BACA,2BAdF,2nBA0BE,2BACA,2BA3BF,80BAyCE,2BACA,2BA1CF,yGA2CuC,IACrC,gBAACA,EAAD,CAAMU,KAAK,sCAAX,YA5CF,qRAgDuD,IACrD,gBAACV,EAAD,CAAMU,KAAK,4BAAX,YAjDF,OAiD4D,IAC1D,gBAACV,EAAD,CAAMU,KAAK,iCAAX,QAlDF,oBAmDE,2BACA,2BApDF,8jBA8DE,2BACA,2BA/DF,icAwEE,2BACA,2BAzEF,iOA6EE,2BACA,2BA9EF,aAgFE,2BAhFF,eAkFE,2BACA,gBAACV,EAAD,CAAMU,KAAK,gCAAX","sources":["webpack://Andrew-Simms-Personal-Website/./src/pages/coverletter.tsx"],"sourcesContent":["import * as React from \"react\"\nimport * as CSS from \"csstype\"\n\nconst baseFontSize = 16\nconst smallFontSize = baseFontSize * 0.7\nconst textColor = \"#000\"\nconst dividerColor = \"rgba(0, 0, 0, 0.1)\"\nconst pageWidth = \"960px\"\nconst fontFamily =\n  '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif'\n\ntype ContainerProps = {\n  children?: React.ReactNode\n}\n\nconst Container = (props: ContainerProps) => {\n  return (\n    <div\n      style={{\n        width: pageWidth,\n        margin: \"0 auto\",\n        padding: \"10px\",\n      }}\n    >\n      {props.children}\n    </div>\n  )\n}\n\ntype SectionProps = {\n  children?: React.ReactNode\n  isRow?: boolean\n  backgroundColor?: string\n}\n\nconst Section = (props: SectionProps) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        width: pageWidth,\n        flexDirection: props.isRow === true ? \"row\" : \"column\",\n        justifyContent: \"space-between\",\n        marginBottom: `${baseFontSize * 0.5}px`,\n        backgroundColor:\n          props.backgroundColor !== undefined ? props.backgroundColor : \"#fff\",\n      }}\n    >\n      {props.children}\n    </div>\n  )\n}\n\ntype TitleProps = {\n  size?: number\n  children?: React.ReactNode\n}\n\nconst Title = (props: TitleProps) => {\n  return (\n    <h1\n      style={{\n        fontSize: `${props.size ? props.size : baseFontSize * 2}px`,\n        color: textColor,\n        fontFamily,\n      }}\n    >\n      {props.children}\n    </h1>\n  )\n}\n\ntype SectionTitleProps = {\n  size?: number\n  children?: React.ReactNode\n  hasUnderline?: boolean\n}\n\nconst SectionTitle = (props: SectionTitleProps) => {\n  return (\n    <h3\n      style={{\n        fontSize: `${props.size ? props.size : baseFontSize * 1.5}px`,\n        borderBottom:\n          props.hasUnderline === true ? `0.5px solid ${dividerColor}` : \"none\",\n        paddingBottom: props.hasUnderline === true ? `3px` : \"none\",\n        width: props.hasUnderline === true ? pageWidth : \"none\",\n        fontFamily,\n        color: textColor,\n      }}\n    >\n      {props.children}\n    </h3>\n  )\n}\n\ntype TextProps = {\n  size?: number\n  children?: React.ReactNode\n  hasUnderline?: boolean\n  isBold?: boolean\n  isItalic?: boolean\n  isAllUpper?: boolean\n  link?: string\n}\n\nconst Text = (props: TextProps) => {\n  const styleProps: CSS.Properties = {\n    fontSize: `${props.size !== undefined ? props.size : baseFontSize * 1}px`,\n    fontWeight: props.isBold === true ? \"bold\" : \"normal\",\n    fontStyle: props.isItalic === true ? \"italic\" : \"normal\",\n    fontFamily,\n    textTransform: props.isAllUpper === true ? \"uppercase\" : \"none\",\n    letterSpacing: props.isAllUpper === true ? \"0.5px\" : \"0px\",\n    borderBottom: props.link !== undefined ? \"1px solid #ccc\" : \"none\",\n    color: textColor,\n    display: \"inline\",\n  }\n  return (\n    <>\n      {props.link !== undefined ? (\n        <a href={props.link}>\n          <p style={styleProps}>{props.children}</p>\n        </a>\n      ) : (\n        <p style={styleProps}>{props.children}</p>\n      )}\n    </>\n  )\n}\n\ntype EntryProps = {\n  title?: string\n  extraTitle?: string\n  company?: string\n  startDate?: string\n  endDate?: string\n  link?: string\n  location?: string\n  points: Array<string | string[] | React.ReactElement>\n}\n\nconst Entry = (props: EntryProps) => {\n  const hasDate = props.startDate !== undefined && props.endDate !== undefined\n  return (\n    <Section>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"flex-start\",\n        }}\n      >\n        {hasDate ? (\n          <div\n            style={{\n              flexBasis: \"80px\",\n              flexGrow: 0,\n              flexShrink: 0,\n              marginRight: `${smallFontSize}px`,\n              marginBottom: `${smallFontSize}px`,\n              borderRight: `0.5px solid ${dividerColor}`,\n            }}\n          >\n            <Text isBold={true} size={smallFontSize} isAllUpper={true}>\n              {props.startDate}\n              -\n              <br />\n              {props.endDate}\n            </Text>\n          </div>\n        ) : null}\n        <div>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              paddingBottom: \"0px\",\n              marginBottom: \"0px\",\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n              width: `${hasDate ? 960 - 90 : 960}px`,\n              borderLeft: \"none\",\n            }}\n          >\n            {props.title !== undefined ? (\n              props.link !== undefined ? (\n                <div>\n                  <a href={props.link}>\n                    <Text isBold={true}>{props.title}</Text>\n                  </a>\n                </div>\n              ) : (\n                <div>\n                  <Text isBold={true}>{props.title}</Text>\n                </div>\n              )\n            ) : null}\n            {props.extraTitle !== undefined ? (\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  flexGrow: 2,\n                  justifyContent: \"center\",\n                }}\n              >\n                <div\n                  style={{\n                    flexGrow: 2,\n                    backgroundColor: \"#fff\",\n                    borderBottom: `0.5px solid ${dividerColor}`,\n                    height: \"1px\",\n                    marginLeft: `${baseFontSize}px`,\n                    marginRight: `${baseFontSize}px`,\n                  }}\n                ></div>\n                <div style={{ top: \"-3px\", position: \"relative\" }}>\n                  <Text isAllUpper={true} size={smallFontSize}>\n                    {props.extraTitle}\n                  </Text>\n                </div>\n              </div>\n            ) : null}\n          </div>\n          {props.company !== undefined ? (\n            <div>\n              <Text isAllUpper={true} size={smallFontSize}>\n                {props.company}\n              </Text>\n              {props.location !== undefined ? (\n                <Text isAllUpper={true} size={smallFontSize}>\n                  {` - ${props.location}`}\n                </Text>\n              ) : null}\n            </div>\n          ) : null}\n          <ul style={{ margin: 0 }}>\n            {props.points.map(\n              (point: string | string[] | React.ReactElement, i: number) => {\n                if (Array.isArray(point)) {\n                  return (\n                    <ul key={point[0]}>\n                      {point.map((p) => {\n                        return (\n                          <li key={p}>\n                            <Text>{p}.</Text>\n                          </li>\n                        )\n                      })}\n                    </ul>\n                  )\n                } else {\n                  if (typeof point === \"string\") {\n                    return (\n                      <li key={point}>\n                        <Text>{point}.</Text>\n                      </li>\n                    )\n                  } else {\n                    return <div key={i}>{point}</div>\n                  }\n                }\n              }\n            )}\n          </ul>\n        </div>\n      </div>\n    </Section>\n  )\n}\n\nconst today = new Date()\n\nconst CoverLetter = () => (\n  <Container>\n    <Section isRow={true}>\n      <div>\n        <Title>Andrew Simms</Title>\n        <Text isAllUpper={true} size={smallFontSize}>\n          Applicant For: Water and Offshore Wind Data Acquisition and\n          Instrumentation Engineer - R7595\n        </Text>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"flex-end\",\n          alignItems: \"flex-end\",\n        }}\n      >\n        <div>\n          <Text>andrew.simms@nrel.gov</Text>\n        </div>\n        <div>\n          <Text>(720) 537-6446</Text>\n        </div>\n        <div>\n          <Text>Golden, CO</Text>\n        </div>\n      </div>\n    </Section>\n    <div style={{ height: `${baseFontSize}px` }}></div>\n    <Section>\n      <Text isAllUpper={true} size={smallFontSize}>\n        {today.toLocaleDateString(\"en-US\", {\n          weekday: \"long\",\n          year: \"numeric\",\n          month: \"long\",\n          day: \"numeric\",\n        })}\n        <br />\n        <br />\n        Ms. Elise DeGeorge - Manager - Water Power\n        <br />\n        National Renewable Energy Laboratory\n        <br />\n        15301 W. Denver West Pkwy\n        <br />\n        Golden, CO 80401\n      </Text>\n    </Section>\n    <Section>\n      <Text>\n        Dear Ms. DeGeorge,\n        <br />\n        {/* What about this position is interesting and why do you want this position */}\n        <br />I am excited to be applying for your Water and Offshore Wind Data\n        Acquisition and Instrumentation Engineer (R7595) position! I have found\n        my 2+ years at NREL to be exciting and incredibly satisfying. I enjoy\n        coming into work everyday and working collaboratively towards the\n        mission of saving the planet. Part of my personality gravitates towards\n        doing something that truly matters, and in applying for this new\n        position I am hopeful that NREL and the Water Power group will take full\n        advantage of the skills, experience, and passion I have to offer, while\n        also providing a career that makes the world a better place.\n        <br />\n        <br />\n        {/* What have you done that matches the job description, and how did you excel at those things? */}\n        In my current hands-on position as a research electronics technician I\n        build and deploy professional quality custom data acquisition systems\n        (DAS) and instrumentation for cutting-edge marine renewable energy (MRE)\n        research. I am a team member of two currently deployed projects, the\n        MODAQ system on-board the C-Power SeaRAY and strain gages installed\n        inside of the Verdant Power Thermoplastic Blades. This experience gives\n        me a deep understanding of the big picture of planning, building,\n        deploying and documenting DAS solutions for the MRE industry, and an\n        appreciation of the challenge of data acquisition in a marine\n        environment.\n        <br />\n        <br />\n        In my past positions as a mobile, web, and firmware developer I built\n        small to medium sized custom applications for small businesses and\n        startups. I learned to be adaptable, methodical, curious, and tenacious.\n        My experiences ranges from writing near real-time Haversine distance\n        ranking algorithms in TypeScript to optimizing Bezier curve calculation\n        algorithms in C. I have programmed on multiple platforms and\n        technologies including HTML/CSS, PHP/SQL/Wordpress, Python/Django,\n        C/Arduino, JavaScript/Node.js, React Native and Typescript/React.js.I am\n        familiar with many different software development tools including Git,\n        Github, Linux, and Vim. This experience gives me a head start on the\n        programming challenges I would face in this position and I am hopeful\n        that my skills will be useful programming LabVIEW, SoC hardware and FPGA\n        devices.\n        <br />\n        <br />I also enjoy programming as a hobby and in my free time developed\n        and built a Raspberry Pi (RPi) based{\" \"}\n        <Text link=\"https://github.com/simmsa/home_das\">Home DAS</Text> which\n        uses Python code to monitor and collect on-demand 240 Hz amperage data\n        which is visualized with a web server written in Next.js and Typescript\n        for monitoring and collecting water usage data of a dosing pump system.\n        More examples of my software work can be found on my{\" \"}\n        <Text link=\"http://github.com/simmsa\">personal</Text> and{\" \"}\n        <Text link=\"http://nrel.github.gov/asimms\">NREL</Text> Github accounts.\n        <br />\n        <br />\n        During my time at the University of Colorado Boulder - Leeds School of\n        Business I earned a B.S. in Business Administration with an emphasis in\n        Finance. With classes ranging from Entrepreneurial Finance to Capital\n        Investment Analysis, I gained a strong understanding of quantitative\n        finance and statistics. My Capstone project calculating the corporate\n        valuation and future price estimation of Google stock was a great\n        exercise in building models to evaluate the future value of current\n        assets. After 5 years our estimated price differed from the market value\n        by only 13%!\n        <br />\n        <br />\n        In a lot of ways, this is the perfect job for me. I get to leverage my\n        skills and knowledge gained as a research electronics technician and\n        blend them with with my software development experience and my B.S\n        business/finance degree. My experience has taught me the time and effort\n        required to do quality work, and I will use this experience to plan,\n        develop, document, and deploy the next generation of data acquisition\n        systems for MRE and beyond.\n        {/* Why I would fit in at NREL */}\n        <br />\n        <br />I look forward to discussing this Data Acquisition and\n        Instrumentation Engineer position and my qualifications in more detail.\n        I am available to talk at your earliest convenience. Thank you for your\n        time and consideration.\n        <br />\n        <br />\n        Sincerely,\n        <br />\n        Andrew Simms\n        <br />\n        <Text link=\"mailto:andrew.simms@nrel.gov\">andrew.simms@nrel.gov</Text>\n      </Text>\n    </Section>\n  </Container>\n)\n\nexport default CoverLetter\n// In reference to your responsibilities and requirements listed in the job\n// description, I have:\n// <br />\n// <ul>\n//   <li>\n//     A passion for improving the world through renewable energy\n//     development\n//   </li>\n//   <li>Multiple years of experience as a software developer</li>\n//   <li>A curious mind</li>\n// </ul>\n// <br />I am excited to be appying for the Engineer position at NREL. I\n// have been building and programming electronics devices since middle\n// school and programming since college, so it has always been a passion of\n// mine. I love the idea that I could turn something I enjoy into a full\n// time career while also doing my part to save the planet.\n// <br />\n// <br />\n// In my current role as a research technician I routinely build and deploy\n// professional grade data acquisition systems (DAS) and have experience in\n// sucessfully spec'ing, building, and deploying research grade DAS.\n// <br />\n// <br />\n// In my previous positions I build\n// <br />\n// <br />\n// There is no question I have a lot to learn, but my current and past\n// experience puts me in a unique position. My software skills are much\n// different and allow me to contribute in areas where other team members\n// cannot. Essentially, I can, and will do the grunt work to let senior\n// engineers focus on solving higher level problems.\n// <br />\n// <br />\n// Please feel free to check out my{\" \"}\n// <Text link=\"http://github.com/simmsa\">personal</Text> and{\" \"}\n// <Text link=\"http://nrel.github.gov/asimms\">NREL</Text> github accounts\n// to see examples of my software work.\n// <br />\n// <br />\n// My blend of hands-on technical skill, software development experience,\n// financial and statistical understanding, and business degree, would\n// allow me to contribute in multiple domains useful to NREL, DOE and the\n// MRE industry.\n"],"names":["smallFontSize","baseFontSize","textColor","pageWidth","fontFamily","Container","props","style","width","margin","padding","children","Section","display","flexDirection","isRow","justifyContent","marginBottom","backgroundColor","undefined","Title","fontSize","size","color","Text","styleProps","fontWeight","isBold","fontStyle","isItalic","textTransform","isAllUpper","letterSpacing","borderBottom","link","href","today","Date","alignItems","height","toLocaleDateString","weekday","year","month","day"],"sourceRoot":""}