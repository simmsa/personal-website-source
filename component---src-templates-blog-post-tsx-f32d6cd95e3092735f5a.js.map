{"version":3,"file":"component---src-templates-blog-post-tsx-f32d6cd95e3092735f5a.js","mappings":"+JA0DA,IAhDgB,SAACA,GACf,IAAMC,OAA6BC,IAAfF,EAAMG,MAAsBH,EAAMG,KAAKC,OAAS,EAE9DC,EAAQ,CAAEC,cAAe,OAEzBC,EAAU,SAACC,GAAD,OACd,wBAAMC,UAJU,oBAIYJ,MAAOA,GACjC,yBAAOI,UAAWT,EAAMU,QAAU,aAAe,IAC9CF,EAASG,YAKVC,EAAO,SAACJ,GACZ,OAAIP,EAEA,qBACEY,KAAML,EAASL,KACfM,UAAWT,EAAMc,eAAiBd,EAAMU,QAAU,YAAc,IAEhE,gBAACH,EAAYP,IAIV,gBAACO,EAAYC,IAIlBO,EAAY,SAACP,GACjB,OAA2B,IAAvBR,EAAMgB,aAEN,4BACE,yBAAOP,UAAU,mBAAjB,KACA,gBAACG,EAASJ,IAIP,gBAACI,EAASJ,IAIrB,OACE,2BACE,gBAACO,EAAcf,M,mCCErB,IA5BmB,SAACA,GAClB,IAOMiB,EAAc,iBAPU,CAC5BC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,IAAK,GAGuCrB,EAAMiB,QAG9CK,EAAoBC,EAAAA,SAAAA,IAAmBvB,EAAMW,UAAU,SAACa,GAC5D,OAAOD,EAAAA,aAAmBC,EAAO,CAAEd,QAASV,EAAMU,aAGpD,OACE,uBACED,UAAS,gCAAkCQ,EAAOI,IAAzC,OACPJ,EAAOC,OADA,OAEFD,EAAOG,MAFL,OAGPH,EAAOE,KAHA,qBAIWnB,EAAMyB,gBAAkB,UAE3CzB,EAAMU,QAAUY,EAAoBtB,EAAMW,Y,kFC6CjD,UA9CiB,SAACX,GAChB,IAAM0B,EAAO1B,EAAM2B,KAAKC,eACxB,OACE,gBAAC,IAAD,CAAQC,MAAOH,EAAKI,YAAYD,OAE9B,yBAAOE,KAAK,YAAZ,mZAsBA,0BAAKL,EAAKI,YAAYD,OACtB,uBAAKpB,UAAU,QACb,gBAAC,IAAD,CAAYC,SAAS,GACnB,gBAAC,IAAD,qBACA,gBAAC,IAAD,CAASM,cAAc,GAAOU,EAAKI,YAAYE,MAC/C,gBAAC,IAAD,CAAShB,cAAc,GAAOU,EAAKI,YAAYG,QAGnD,gBAAC,IAAD,CAAKC,MAAOR,EAAKI,YAAYK,KAAKC,gBAAgBF,QACX,KAAtCR,EAAKI,YAAYO,iBAChB,uBAAK5B,UAAU,8DACb,gBAAC,IAAD,CAASC,SAAS,GAAOgB,EAAKI,YAAYO,mBAE1C,KACJ,uBAAKC,wBAAyB,CAAEC,OAAQb,EAAKc","sources":["webpack://Andrew-Simms-Personal-Website/./src/components/text/SubText.tsx","webpack://Andrew-Simms-Personal-Website/./src/components/text/SubTextRow.tsx","webpack://Andrew-Simms-Personal-Website/./src/templates/BlogPost.tsx"],"sourcesContent":["import * as React from \"react\";\n\nexport interface SubTextProps {\n  children: string;\n  link?: string;\n  hasSubtleLink?: boolean;\n  hasSeparator?: boolean;\n  isMuted?: boolean;\n}\n\nconst SubText = (props: SubTextProps) => {\n  const linkIsValid = props.link !== undefined && props.link.length > 0;\n  const className = \"h6 text-uppercase\";\n  const style = { letterSpacing: \"1px\" };\n\n  const Content = (subProps: SubTextProps) => (\n    <span className={className} style={style}>\n      <small className={props.isMuted ? \"text-muted\" : \"\"}>\n        {subProps.children}\n      </small>\n    </span>\n  );\n\n  const Next = (subProps: SubTextProps) => {\n    if (linkIsValid) {\n      return (\n        <a\n          href={subProps.link}\n          className={props.hasSubtleLink || props.isMuted ? \"text-dark\" : \"\"}\n        >\n          <Content {...props} />\n        </a>\n      );\n    } else {\n      return <Content {...subProps} />;\n    }\n  };\n\n  const Separator = (subProps: SubTextProps) => {\n    if (props.hasSeparator === true) {\n      return (\n        <span>\n          <small className=\"text-muted px-2\">&#124;</small>\n          <Next {...subProps} />\n        </span>\n      );\n    } else {\n      return <Next {...subProps} />;\n    }\n  };\n\n  return (\n    <div>\n      <Separator {...props} />\n    </div>\n  );\n};\n\nexport default SubText;\n","import * as React from \"react\";\n\nimport { SubTextProps } from \"./SubText\";\n\ninterface OptionalMargin {\n  top?: number;\n  right?: number;\n  bottom?: number;\n  left?: number;\n}\n\ninterface Margin {\n  top: number;\n  right: number;\n  bottom: number;\n  left: number;\n}\n\ninterface SubTextRowProps {\n  children:\n    | Array<React.ReactElement<SubTextProps>>\n    | React.ReactElement<SubTextProps>;\n  margin?: OptionalMargin;\n  justifyContent?: \"start\" | \"end\" | \"center\" | \"between\" | \"around\";\n  isMuted?: boolean;\n}\n\nconst SubTextRow = (props: SubTextRowProps) => {\n  const defaultMargin: Margin = {\n    bottom: 1,\n    left: 0,\n    right: 0,\n    top: 1,\n  };\n\n  const margin: Margin = { ...defaultMargin, ...props.margin };\n\n  // Pass `isMuted` prop down to children\n  const childrenWithProps = React.Children.map(props.children, (child) => {\n    return React.cloneElement(child, { isMuted: props.isMuted });\n  });\n\n  return (\n    <div\n      className={`d-flex flex-row flex-wrap mt-${margin.top} mb-${\n        margin.bottom\n      } mr-${margin.right} ml-${\n        margin.left\n      } justify-content-${props.justifyContent || \"start\"}`}\n    >\n      {props.isMuted ? childrenWithProps : props.children}\n    </div>\n  );\n};\n\nexport default SubTextRow;\n","import * as React from \"react\";\n\nimport { graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nimport Layout from \"../components/Layout\";\nimport SubText from \"../components/text/SubText\";\nimport SubTextRow from \"../components/text/SubTextRow\";\n\nimport \"../../node_modules/prismjs/themes/prism.css\";\n\n// Here we specifically using what gatsby calls a \"pageQuery\" as opposed to a StaticQuery\n// because we are searching for a specific blog post with the variable `slug`\n// The why is explained here: https://www.gatsbyjs.org/docs/static-query/#how-staticquery-differs-from-page-query\n// I don't like this for a few reasons:\n//  1: Its not clear how `data` gets to the component (magic?)\n//  2: Why is it called data? Can you change this variable name, where is it set\n//  3: What variable name does this take (here we called it `query`, but it could be called anything)\n//  4: If there are multiple graphql queries the first one takes precidence and sets `data`. Why?\n// I think it would be better if there was a `PageQuery` component that takes variables, or just a\n// `Query` component for all graphql queries\n// Otherwise this is pretty cool and I like graphql\n// Note: It looks like some other people would like this too... https://github.com/gatsbyjs/gatsby/issues/10482\nexport const query = graphql`\n  query($slugString: String!) {\n    markdownRemark(fields: { slug: { eq: $slugString } }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM D, YYYY\")\n        hero {\n          childImageSharp {\n            fluid(maxWidth: 960) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        hero_description\n        tags\n      }\n    }\n  }\n`;\n\ninterface BlogPostProps {\n  // Magically gets data from graphql?\n  data: any;\n}\n\nconst BlogPost = (props: BlogPostProps) => {\n  const post = props.data.markdownRemark;\n  return (\n    <Layout title={post.frontmatter.title}>\n      {/* Fix Weirdness with li styling */}\n      <style type=\"text/css\">\n        {`\n          li p {\n            margin-bottom: 0.25em;\n            padding-bottom: 0;\n          }\n          ol, ul {\n            margin-bottom: 1em;\n          }\n\n          ol ul {\n            margin-bottom: 1em;\n          }\n\n          p, pre {\n          margin-bottom: 1em !important;\n          }\n          h1, h2, h3, h4, h5, h6 {\n            font-weight: 300;\n          }\n        `}\n      </style>\n      <h1>{post.frontmatter.title}</h1>\n      <div className=\"mb-3\">\n        <SubTextRow isMuted={true}>\n          <SubText>Andrew Simms</SubText>\n          <SubText hasSeparator={true}>{post.frontmatter.date}</SubText>\n          <SubText hasSeparator={true}>{post.frontmatter.tags}</SubText>\n        </SubTextRow>\n      </div>\n      <Img fluid={post.frontmatter.hero.childImageSharp.fluid} />\n      {post.frontmatter.hero_description !== \"\" ? (\n        <div className=\"d-flex align-items-center justify-content-center mb-3 mt-1\">\n          <SubText isMuted={true}>{post.frontmatter.hero_description}</SubText>\n        </div>\n      ) : null}\n      <div dangerouslySetInnerHTML={{ __html: post.html }} />\n    </Layout>\n  );\n};\n\nexport default BlogPost;\n"],"names":["props","linkIsValid","undefined","link","length","style","letterSpacing","Content","subProps","className","isMuted","children","Next","href","hasSubtleLink","Separator","hasSeparator","margin","bottom","left","right","top","childrenWithProps","React","child","justifyContent","post","data","markdownRemark","title","frontmatter","type","date","tags","fluid","hero","childImageSharp","hero_description","dangerouslySetInnerHTML","__html","html"],"sourceRoot":""}